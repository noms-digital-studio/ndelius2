defaults: &defaults
  working_directory: ~/ndelius-new-tech
  docker:
    # dangerous pinning to old version with node v12.18.1 - from previous version of circleci/openjdk:8-node-browsers
    # fixes issue with compatible issue with v12.18.3 and graceful-fs webjar
    - image: circleci/openjdk@sha256:0ab7db4ecdc5966baaa44f64075725c22a53dc63922492c26cabd98b7c961ae0

version: 2.1

orbs:
  aws-cli: circleci/aws-cli@1.4.0
  aws-ecr: circleci/aws-ecr@6.15.3
  aws-ecs: circleci/aws-ecs@2.0.0
  hmpps: ministryofjustice/hmpps@2.2
  mem: circleci/rememborb@0.0.1
  queue: eddiewebb/queue@1.5.0

commands:
  assume_role:
    parameters:
      role-arn:
        type: string
    steps:
      - run:
          name: Assume IAM role
          # This is a workaround for the aws-ecs/update-service CircleCI command not taking a profile parameter, and the underlying aws cli command not honouring the AWS_PROFILE env var.
          # See https://github.com/CircleCI-Public/aws-ecs-orb/issues/41 for further details
          command: |
            temp_role=$(aws sts assume-role --role-arn <<parameters.role-arn>> --role-session-name "circleci-$CIRCLE_BUILD_NUM-$RANDOM")
            echo "export AWS_ACCESS_KEY_ID=$(echo $temp_role | jq .Credentials.AccessKeyId | xargs)" >> $BASH_ENV; source $BASH_ENV;
            echo "export AWS_SECRET_ACCESS_KEY=$(echo $temp_role | jq .Credentials.SecretAccessKey | xargs)" >> $BASH_ENV; source $BASH_ENV;
            echo "export AWS_SESSION_TOKEN=$(echo $temp_role | jq .Credentials.SessionToken | xargs)" >> $BASH_ENV; source $BASH_ENV;
            aws configure set aws_session_token "$(echo $temp_role | jq .Credentials.SessionToken | xargs)" --profile default

general:
  branches:
jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/ndelius-new-tech
      - restore_cache:
          keys:
            - v2-ndelius-new-tech-{{ checksum "build.sbt" }}
            - v2-ndelius-new-tech-
      - run:
          name: yarn install
          command: |
            yarn install --silent
      - run:
          name: Compile
          command: |
            export _JAVA_OPTIONS="-Xms512m -Xmx1224m"
            export SBT_OPTS="${SBT_OPTS} -Dsbt.jse.engineType=Node -Dsbt.jse.command=$(which nodejs)"
            sbt compile < /dev/null
      - persist_to_workspace:
          root: .
          paths: .
  unitTests:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/ndelius-new-tech
      - restore_cache:
          keys:
            - v2-ndelius-new-tech-{{ checksum "build.sbt" }}
            - v2-ndelius-new-tech-
      - run:
          name: Unit tests (Jest)
          command: |
            yarn jest /app/assets/javascripts/app
      - run:
          name: Unit tests
          command: |
            export _JAVA_OPTIONS="-Xms512m -Xmx1224m"
            export SBT_OPTS="${SBT_OPTS} -Dsbt.jse.engineType=Node -Dsbt.jse.command=$(which nodejs)"
            export CUCUMBER_OPTIONS="--tags @None"
            sbt test < /dev/null
      - store_test_results:
          path: ./target/test-reports/
      - store_artifacts:
          path: ./target/test-reports/
          destination: reports
  bddOffenderSummary:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/ndelius-new-tech
      - restore_cache:
          keys:
            - v2-ndelius-new-tech-{{ checksum "build.sbt" }}
            - v2-ndelius-new-tech-
      - run:
          name: BDD - Offender Summary
          command: |
            export _JAVA_OPTIONS="-Xms512m -Xmx1224m"
            export SBT_OPTS="${SBT_OPTS} -Dsbt.jse.engineType=Node -Dsbt.jse.command=$(which nodejs)"
            export CUCUMBER_OPTIONS="--tags @OffenderSummary"
            sbt "test-only bdd.RunCucumber" < /dev/null
      - store_test_results:
          path: ./target/test-reports/
      - store_artifacts:
          path: ./target/test-reports/
          destination: reports
  bddNationalSearch:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/ndelius-new-tech
      - restore_cache:
          keys:
            - v2-ndelius-new-tech-{{ checksum "build.sbt" }}
            - v2-ndelius-new-tech-
      - run:
          name: BDD - National Search
          command: |
            export _JAVA_OPTIONS="-Xms512m -Xmx1224m"
            export SBT_OPTS="${SBT_OPTS} -Dsbt.jse.engineType=Node -Dsbt.jse.command=$(which nodejs)"
            export CUCUMBER_OPTIONS="--tags @Search"
            sbt "test-only bdd.RunCucumber" < /dev/null
      - store_test_results:
          path: ./target/test-reports/
      - store_artifacts:
          path: ./target/test-reports/
          destination: reports
  bddSFR:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/ndelius-new-tech
      - restore_cache:
          keys:
            - v2-ndelius-new-tech-{{ checksum "build.sbt" }}
            - v2-ndelius-new-tech-
      - run:
          name: BDD - SFR
          command: |
            export _JAVA_OPTIONS="-Xms512m -Xmx1224m"
            export SBT_OPTS="${SBT_OPTS} -Dsbt.jse.engineType=Node -Dsbt.jse.command=$(which nodejs)"
            export CUCUMBER_OPTIONS="--tags @SFR"
            sbt "test-only bdd.RunCucumber" < /dev/null
      - store_test_results:
          path: ./target/test-reports/
      - store_artifacts:
          path: ./target/test-reports/
          destination: reports
  bddParom1:
    <<: *defaults
    parallelism: 3
    steps:
      - attach_workspace:
          at: ~/ndelius-new-tech
      - restore_cache:
          keys:
            - v2-ndelius-new-tech-{{ checksum "build.sbt" }}
            - v2-ndelius-new-tech-
      - run:
          name: BDD - Parom1
          command: |
            export TESTFILES=$(circleci tests glob "features/**/paroleparom1report/*.feature" | circleci tests split --split-by=timings --timings-type=filename)
            export _JAVA_OPTIONS="-Xms512m -Xmx1224m"
            export SBT_OPTS="${SBT_OPTS} -Dsbt.jse.engineType=Node -Dsbt.jse.command=$(which nodejs)"
            export CUCUMBER_OPTIONS="--tags @Parom1 $TESTFILES"
            echo $CUCUMBER_OPTIONS
            sbt "test-only bdd.RunCucumber" < /dev/null
      - store_test_results:
          path: ./target/test-reports/
      - store_artifacts:
          path: ./target/test-reports/
          destination: reports
  bddOther:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/ndelius-new-tech
      - restore_cache:
          keys:
            - v2-ndelius-new-tech-{{ checksum "build.sbt" }}
            - v2-ndelius-new-tech-
      - run:
          name: BDD - Others
          command: |
            export _JAVA_OPTIONS="-Xms512m -Xmx1224m"
            export SBT_OPTS="${SBT_OPTS} -Dsbt.jse.engineType=Node -Dsbt.jse.command=$(which nodejs)"
            export CUCUMBER_OPTIONS="--tags ~@Parom1 --tags ~@OffenderSummary --tags ~@SFR"
            sbt "test-only bdd.RunCucumber" < /dev/null
      - store_test_results:
          path: ./target/test-reports/
      - store_artifacts:
          path: ./target/test-reports/
          destination: reports
  artifacts:
    <<: *defaults
    steps:
      - hmpps/create_app_version
      - attach_workspace:
          at: ~/ndelius-new-tech
      - restore_cache:
          keys:
            - v2-ndelius-new-tech-{{ checksum "build.sbt" }}
            - v2-ndelius-new-tech-
      - run:
          name: Run sbt assembly
          command: |
            export _JAVA_OPTIONS="-Xms512m -Xmx1224m"
            export APP_VERSION="${VERSION}"
            export SBT_OPTS="${SBT_OPTS} -Dsbt.jse.engineType=Node -Dsbt.jse.command=$(which nodejs)"
            sbt 'set test in assembly := {}' assembly < /dev/null
      - save_cache:
          key: v2-ndelius-new-tech-{{ checksum "build.sbt" }}
          paths:
            - ~/.ivy2/cache
            - ~/.sbt
      - run:
          name: Save Fat Jar
          command: |
            mkdir -p ./target/artifacts
            rm target/scala-2.12/ndelius2_*-web-assets.jar
            cp target/scala-2.12/*.jar ./target/artifacts/
            cp ./target/artifacts/ndelius2*.jar ./target/artifacts/ndelius2.jar
      - persist_to_workspace:
          root: ./target/artifacts/
          paths:
            - ./ndelius2.jar
      - store_artifacts:
          path: target/artifacts
          destination: jars
      - aws-cli/setup
      - assume_role:
          role-arn: $AWS_ROLE_ARN
      - setup_remote_docker:
          docker_layer_caching: true
      - aws-ecr/build-and-push-image:
          checkout: false
          repo: hmpps/new-tech-web
          tag: $VERSION
      - when:
          condition:
            equal: [ master, << pipeline.git.branch >> ]
          steps:
            - aws-ecr/build-and-push-image:
                checkout: false
                repo: hmpps/new-tech-web
                tag: latest
  deploy:
    parameters:
      common_vars:
        type: string
        default: >-
          container=new-tech,name=PARAMS_USER_TOKEN_VALID_DURATION,   value=1h,
          container=new-tech,name=STORE_PROVIDER,                     value=alfresco,
          container=new-tech,name=STORE_ALFRESCO_USER,                value=N00,
          container=new-tech,name=DELIUS_API_BASE_URL,                value=http://community-api.ecs.cluster:8080/api/,
          container=new-tech,name=PDF_GENERATOR_URL,                  value=http://pdf-generator.ecs.cluster:8080/,
          container=new-tech,name=FEEDBACK_FORM_URL,                  value=https://goo.gl/forms/6HezOsoLUEDYkDgX2,
          container=new-tech,name=FEEDBACK_PAROM1_FORM_URL,           value=https://goo.gl/forms/tau33AGsZhYCbTpk1,
          container=new-tech,name=FEEDBACK_SEARCH_FORM_URL,           value=https://forms.gle/iWpkM21KtNDgzFAm7,
          container=new-tech,name=FEEDBACK_OFFENDER_SUMMARY_FORM_URL, value=https://goo.gl/forms/SVgL3CuCNpvkuHxJ2,
      env_vars:
        type: string
        default: container=new-tech,name=ENVIRONMENT_NAME,value=$AWS_ECS_ENV_NAME
    docker:
      - image: circleci/python
    steps:
      - mem/recall:
          env_var: APP_VERSION
      - queue/until_front_of_line:
          consider-branch: false
          time: '10'
      - aws-cli/setup
      - assume_role:
          role-arn: $AWS_ROLE_ARN
      - aws-ecs/update-service:
          cluster-name: $AWS_ECS_CLUSTER_NAME
          family: $AWS_ECS_ENV_NAME-new-tech-task-definition
          service-name: $AWS_ECS_ENV_NAME-new-tech-service
          container-image-name-updates: container=new-tech,tag=$APP_VERSION
          container-env-var-updates: << parameters.common_vars >> << parameters.env_vars >>
          verify-revision-is-deployed: true

workflows:
  version: 2
  build-deploy-test:
    jobs:
      - build
      - bddOther:
          requires:
            - build
      - bddParom1:
          requires:
            - build
      - bddSFR:
          requires:
            - build
      - bddOffenderSummary:
          requires:
            - build
      - bddNationalSearch:
          requires:
            - build
      - unitTests:
          requires:
            - build
      - artifacts:
          context: hmpps-delius-push-to-ecr
          requires:
            - build
            - bddOther
            - bddParom1
            - bddSFR
            - bddOffenderSummary
            - bddNationalSearch
            - unitTests
      - deploy:
          name: deploy_to_dev
          context: hmpps-delius-deploy-to-ecs-dev
          env_vars: >-
            container=new-tech,name=OFFENDER_SEARCH_PROVIDER,       value=probation-offender-search,
            container=new-tech,name=PROBATION_OFFENDER_SEARCH_URL,  value=https://probation-offender-search-dev.hmpps.service.justice.gov.uk/,
            container=new-tech,name=PRISONER_API_PROVIDER,          value=elite,
            container=new-tech,name=HMPPS_AUTH_BASE_URL,            value=https://sign-in-dev.hmpps.service.justice.gov.uk/,
            container=new-tech,name=NOMIS_API_BASE_URL,             value=https://api-dev.prison.service.justice.gov.uk/
          requires:
            - artifacts
      - deploy:
          name: deploy_to_test
          context: hmpps-delius-deploy-to-ecs-test
          env_vars: >-
            container=new-tech,name=OFFENDER_SEARCH_PROVIDER,       value=probation-offender-search,
            container=new-tech,name=PROBATION_OFFENDER_SEARCH_URL,  value=https://probation-offender-search-dev.hmpps.service.justice.gov.uk/,
            container=new-tech,name=PRISONER_API_PROVIDER,          value=elite,
            container=new-tech,name=HMPPS_AUTH_BASE_URL,            value=https://sign-in-dev.hmpps.service.justice.gov.uk/,
            container=new-tech,name=NOMIS_API_BASE_URL,             value=https://api-dev.prison.service.justice.gov.uk/
          requires:
            - deploy_to_dev
          filters:
            branches:
              only: master